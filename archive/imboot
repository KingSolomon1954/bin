#!/bin/sh

#  imboot - imake bootstrapper (bootstrap Makefile from Imakefile)

# Usage:  imboot [ flags ] [ topdir [ curdir ] ]

# flags can be:
#	-c name		specify name of configuration files
#	-C name		specify name of configuration files, extensible
#			architecture
#	-Danything	pass -Danything to imake
#	-Ianything	pass -Ianything to imake
#	-d		force UseInstalled on
#	-u		force UseInstalled off

# topdir = path to top of project tree (default ".")
# curdir = path to current directory from top of project tree (default ".")

# If no -c name or -C name option is given, configuration files from
# the config directory under the project root (i.e., from topdir/config)
# are used.  UseInstalled is not defined.

# If -c name is given, configuration files from CONFIGROOTDIR/name
# are used instead of the files in topdir/config.  UseInstalled is defined.

# If -c name is given, configuration files from CONFIGROOTDIR/name
# are used in conjunction with the files in topdir/config.  UseInstalled
# is defined.

# For -c or -C, if name is an absolute path, CONFIGROOTDIR is not
# prepended.

# You can also specify other -D and -I flags, to allow arbitrary
# symbols to be defined or undefined, or other search directories to
# be given.

# The -d and -u options may be used to force UseInstalled on or off,
# overriding the default behavior.

# 11 Apr 93 Paul DuBois dubois@primate.wisc.edu

# 11 Apr 93 V1.00.  Created.
# 02 Jun 93 V1.01.  Bug fixes.

usage="usage: $0 [-c|-C name] [-d] [-u] [-Dsym] [-Idir] [topdir [curdir]]"

# configrootdir=CONFIGROOTDIR
configrootdir=$HOME/project
configname=
topdir=.
curdir=.
dopt=n
uopt=n
args=

# check for -c, -C, -D, -I, -d, -u options

while [ $# -gt 0 ]; do
	case "$1" in
		-c)
			if [ $# -lt 2 ]; then
				echo "$usage" 1>&2
				exit 1
			fi
			configname=$2
			shift;shift
			;;
		-C)
			if [ $# -lt 2 ]; then
				echo "$usage" 1>&2
				exit 1
			fi
			configname=$2
			useboth=y
			shift;shift
			;;
		-d)			# force on unconditionally
			dopt=y
			uopt=n
			shift
			;;
		-u)			# force off unconditionally
			dopt=n
			uopt=y
			shift
			;;
		-[DI]*)			# pass through -D, -U, -I options
			args="$args $1"
			shift
			;;
		-*)			# unrecognized flag
			echo "$usage" 1>&2
			exit 1
			;;
		*)			# non-flag; quit flag processing
			break
			;;
	esac
done

if [ $# -gt 0 ]; then
	topdir="$1"
	shift
fi
if [ $# -gt 0 ]; then
	curdir="$1"
fi

if [ "$configname" = "" ]; then
	useinstalled=
	configdir="-I$topdir/config"
elif [ "$useboth" != "y" ]; then
	useinstalled=-DUseInstalled
	case "$configname" in
	/?*) configdir="-I$configname" ;;
	*) configdir="-I$configrootdir/$configname" ;;
	esac
else
	useinstalled=-DUseInstalled
	case "$configname" in
	/?*) configdir="-I$topdir/config -I$configname" ;;
	*) configdir="-I$topdir/config -I$configrootdir/$configname" ;;
	esac
fi

# force UseInstalled on/off if -d/-u were given
if [ "$dopt" = "y" ]; then
	useinstalled=-DUseInstalled
fi
if [ "$uopt" = "y" ]; then
	useinstalled=
fi

# backup current Makefile if it exists
if [ -f Makefile ]; then 
	echo mv Makefile Makefile.bak
	mv Makefile Makefile.bak
fi

# echo command, then run it
echo imake $args $useinstalled $configdir -DTOPDIR=$topdir -DCURDIR=$curdir
imake $args $useinstalled $configdir -DTOPDIR=$topdir -DCURDIR=$curdir
